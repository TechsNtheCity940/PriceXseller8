import { ModelsApi } from "../api";
import { Model } from "./abstractModel";
import { ModelAdapter } from "./modelAdapter";
export type BaseModelCapability = "complete" | "fineTune";
export declare class BaseModel extends Model {
    readonly slug: string;
    readonly capabilities: ReadonlyArray<BaseModelCapability>;
    constructor({ apiInstance, capabilities, id, slug, workspaceId, }: {
        apiInstance: ModelsApi;
        capabilities: ReadonlyArray<BaseModelCapability>;
        id: string;
        slug: string;
        workspaceId: string;
    });
    readonly createModelAdapter: ({ learningRate, name, rank, }: {
        learningRate?: number;
        name: string;
        rank?: number;
    }) => Promise<ModelAdapter>;
}
//# sourceMappingURL=baseModel.d.ts.map