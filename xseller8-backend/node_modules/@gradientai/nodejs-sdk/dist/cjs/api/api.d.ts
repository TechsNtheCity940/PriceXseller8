/**
 * Gradient AI API
 * Interface for interacting with Gradient AI.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gradient.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 *
 * @export
 * @interface AddFilesToRagCollectionBodyParams
 */
export interface AddFilesToRagCollectionBodyParams {
    /**
     *
     * @type {Array<CreateRagCollectionBodyParamsFilesInner>}
     * @memberof AddFilesToRagCollectionBodyParams
     */
    'files': Array<CreateRagCollectionBodyParamsFilesInner>;
}
/**
 *
 * @export
 * @interface AddFilesToRagCollectionError
 */
export interface AddFilesToRagCollectionError {
    /**
     *
     * @type {string}
     * @memberof AddFilesToRagCollectionError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface AnalyzeSentimentBodyParams
 */
export interface AnalyzeSentimentBodyParams {
    /**
     * The document that will be analyzed to determine the sentiment.
     * @type {string}
     * @memberof AnalyzeSentimentBodyParams
     */
    'document': string;
    /**
     * Example pairs of documents and sentiments.
     * @type {Array<AnalyzeSentimentBodyParamsExamplesInner>}
     * @memberof AnalyzeSentimentBodyParams
     */
    'examples'?: Array<AnalyzeSentimentBodyParamsExamplesInner> | null;
}
/**
 *
 * @export
 * @interface AnalyzeSentimentBodyParamsExamplesInner
 */
export interface AnalyzeSentimentBodyParamsExamplesInner {
    /**
     *
     * @type {string}
     * @memberof AnalyzeSentimentBodyParamsExamplesInner
     */
    'document': string;
    /**
     *
     * @type {string}
     * @memberof AnalyzeSentimentBodyParamsExamplesInner
     */
    'sentiment': AnalyzeSentimentBodyParamsExamplesInnerSentimentEnum;
}
export declare const AnalyzeSentimentBodyParamsExamplesInnerSentimentEnum: {
    readonly Negative: "negative";
    readonly Neutral: "neutral";
    readonly Positive: "positive";
};
export type AnalyzeSentimentBodyParamsExamplesInnerSentimentEnum = typeof AnalyzeSentimentBodyParamsExamplesInnerSentimentEnum[keyof typeof AnalyzeSentimentBodyParamsExamplesInnerSentimentEnum];
/**
 *
 * @export
 * @interface AnalyzeSentimentError
 */
export interface AnalyzeSentimentError {
    /**
     *
     * @type {string}
     * @memberof AnalyzeSentimentError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface AnalyzeSentimentSuccess
 */
export interface AnalyzeSentimentSuccess {
    /**
     *
     * @type {string}
     * @memberof AnalyzeSentimentSuccess
     */
    'sentiment': AnalyzeSentimentSuccessSentimentEnum;
}
export declare const AnalyzeSentimentSuccessSentimentEnum: {
    readonly Negative: "negative";
    readonly Neutral: "neutral";
    readonly Positive: "positive";
};
export type AnalyzeSentimentSuccessSentimentEnum = typeof AnalyzeSentimentSuccessSentimentEnum[keyof typeof AnalyzeSentimentSuccessSentimentEnum];
/**
 *
 * @export
 * @interface BaseModel
 */
export interface BaseModel {
    /**
     *
     * @type {Array<string>}
     * @memberof BaseModel
     */
    'capabilities': Array<BaseModelCapabilitiesEnum>;
    /**
     *
     * @type {string}
     * @memberof BaseModel
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof BaseModel
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof BaseModel
     */
    'slug': string;
    /**
     *
     * @type {string}
     * @memberof BaseModel
     */
    'type': BaseModelTypeEnum;
}
export declare const BaseModelCapabilitiesEnum: {
    readonly Complete: "complete";
    readonly FineTune: "fineTune";
};
export type BaseModelCapabilitiesEnum = typeof BaseModelCapabilitiesEnum[keyof typeof BaseModelCapabilitiesEnum];
export declare const BaseModelTypeEnum: {
    readonly BaseModel: "baseModel";
};
export type BaseModelTypeEnum = typeof BaseModelTypeEnum[keyof typeof BaseModelTypeEnum];
/**
 *
 * @export
 * @interface CompleteModelBodyParams
 */
export interface CompleteModelBodyParams {
    /**
     * Automatically adds the recommended base model templating.
     * @type {boolean}
     * @memberof CompleteModelBodyParams
     */
    'autoTemplate'?: boolean | null;
    /**
     *
     * @type {CompleteModelBodyParamsGuidance}
     * @memberof CompleteModelBodyParams
     */
    'guidance'?: CompleteModelBodyParamsGuidance | null;
    /**
     * The maximum number of tokens to generate.
     * @type {number}
     * @memberof CompleteModelBodyParams
     */
    'maxGeneratedTokenCount'?: number | null;
    /**
     * The prompt string you are providing the model, to which the model will generate a completion in response.
     * @type {string}
     * @memberof CompleteModelBodyParams
     */
    'query': string;
    /**
     *
     * @type {CompleteModelBodyParamsRag}
     * @memberof CompleteModelBodyParams
     */
    'rag'?: CompleteModelBodyParamsRag | null;
    /**
     * This parameter adjusts the degree of randomness in generation. Higher temperature results in more diverse generations.
     * @type {number}
     * @memberof CompleteModelBodyParams
     */
    'temperature'?: number | null;
    /**
     * This parameter ensures that only the top k most likely tokens are considered for generation at each step.
     * @type {number}
     * @memberof CompleteModelBodyParams
     */
    'topK'?: number | null;
    /**
     * This parameter ensures that only the most likely tokens, with total probability mass of p, are considered for generation at each step. If topK is also enabled, topP acts after topK.
     * @type {number}
     * @memberof CompleteModelBodyParams
     */
    'topP'?: number | null;
}
/**
 *
 * @export
 * @interface CompleteModelBodyParamsGuidance
 */
export interface CompleteModelBodyParamsGuidance {
    /**
     *
     * @type {string}
     * @memberof CompleteModelBodyParamsGuidance
     */
    'type': CompleteModelBodyParamsGuidanceTypeEnum;
    /**
     * The set of possible values that should be generated by the model
     * @type {Array<string>}
     * @memberof CompleteModelBodyParamsGuidance
     */
    'value': Array<string>;
}
export declare const CompleteModelBodyParamsGuidanceTypeEnum: {
    readonly Choice: "choice";
};
export type CompleteModelBodyParamsGuidanceTypeEnum = typeof CompleteModelBodyParamsGuidanceTypeEnum[keyof typeof CompleteModelBodyParamsGuidanceTypeEnum];
/**
 *
 * @export
 * @interface CompleteModelBodyParamsRag
 */
export interface CompleteModelBodyParamsRag {
    /**
     * The ID of the RAG collection to retrieve context from before running completion
     * @type {string}
     * @memberof CompleteModelBodyParamsRag
     */
    'collectionId': string;
}
/**
 * @type CompleteModelError
 * @export
 */
export type CompleteModelError = CompleteModelErrorOneOf | CompleteModelErrorOneOf1 | CompleteModelErrorOneOf10 | CompleteModelErrorOneOf2 | CompleteModelErrorOneOf3 | CompleteModelErrorOneOf4 | CompleteModelErrorOneOf5 | CompleteModelErrorOneOf6 | CompleteModelErrorOneOf7 | CompleteModelErrorOneOf8 | CompleteModelErrorOneOf9;
/**
 *
 * @export
 * @interface CompleteModelErrorOneOf
 */
export interface CompleteModelErrorOneOf {
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf
     */
    'message': string;
    /**
     *
     * @type {CompleteModelErrorOneOfPayload}
     * @memberof CompleteModelErrorOneOf
     */
    'payload': CompleteModelErrorOneOfPayload;
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf
     */
    'type': CompleteModelErrorOneOfTypeEnum;
}
export declare const CompleteModelErrorOneOfTypeEnum: {
    readonly FlaggedContent: "flaggedContent";
    readonly BodyParsingError: "bodyParsingError";
    readonly QueryOrPathParsingError: "queryOrPathParsingError";
    readonly Failed: "failed";
    readonly ModelDoesNotSupportGuidance: "modelDoesNotSupportGuidance";
    readonly NoRagDocumentsFound: "noRagDocumentsFound";
    readonly RagRequiresAutoTemplating: "ragRequiresAutoTemplating";
    readonly UnknownBaseModel: "unknownBaseModel";
    readonly UnknownModelAdapter: "unknownModelAdapter";
    readonly UnknownRagCollection: "unknownRagCollection";
    readonly UnprocessableContent: "unprocessableContent";
};
export type CompleteModelErrorOneOfTypeEnum = typeof CompleteModelErrorOneOfTypeEnum[keyof typeof CompleteModelErrorOneOfTypeEnum];
/**
 *
 * @export
 * @interface CompleteModelErrorOneOf1
 */
export interface CompleteModelErrorOneOf1 {
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf1
     */
    'message': string;
    /**
     *
     * @type {CompleteModelErrorOneOf1Payload}
     * @memberof CompleteModelErrorOneOf1
     */
    'payload': CompleteModelErrorOneOf1Payload;
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf1
     */
    'type': CompleteModelErrorOneOf1TypeEnum;
}
export declare const CompleteModelErrorOneOf1TypeEnum: {
    readonly BodyParsingError: "bodyParsingError";
    readonly FlaggedContent: "flaggedContent";
    readonly QueryOrPathParsingError: "queryOrPathParsingError";
    readonly Failed: "failed";
    readonly ModelDoesNotSupportGuidance: "modelDoesNotSupportGuidance";
    readonly NoRagDocumentsFound: "noRagDocumentsFound";
    readonly RagRequiresAutoTemplating: "ragRequiresAutoTemplating";
    readonly UnknownBaseModel: "unknownBaseModel";
    readonly UnknownModelAdapter: "unknownModelAdapter";
    readonly UnknownRagCollection: "unknownRagCollection";
    readonly UnprocessableContent: "unprocessableContent";
    readonly ModelIncapableOfFineTuning: "modelIncapableOfFineTuning";
    readonly NanLoss: "nanLoss";
};
export type CompleteModelErrorOneOf1TypeEnum = typeof CompleteModelErrorOneOf1TypeEnum[keyof typeof CompleteModelErrorOneOf1TypeEnum];
/**
 *
 * @export
 * @interface CompleteModelErrorOneOf10
 */
export interface CompleteModelErrorOneOf10 {
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf10
     */
    'message': string;
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf10
     */
    'type': CompleteModelErrorOneOf10TypeEnum;
}
export declare const CompleteModelErrorOneOf10TypeEnum: {
    readonly UnprocessableContent: "unprocessableContent";
};
export type CompleteModelErrorOneOf10TypeEnum = typeof CompleteModelErrorOneOf10TypeEnum[keyof typeof CompleteModelErrorOneOf10TypeEnum];
/**
 *
 * @export
 * @interface CompleteModelErrorOneOf1Payload
 */
export interface CompleteModelErrorOneOf1Payload {
    /**
     *
     * @type {any}
     * @memberof CompleteModelErrorOneOf1Payload
     */
    'formattedValidationError'?: any | null;
    /**
     *
     * @type {any}
     * @memberof CompleteModelErrorOneOf1Payload
     */
    'validationError'?: any;
}
/**
 *
 * @export
 * @interface CompleteModelErrorOneOf2
 */
export interface CompleteModelErrorOneOf2 {
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf2
     */
    'message': string;
    /**
     *
     * @type {CompleteModelErrorOneOf1Payload}
     * @memberof CompleteModelErrorOneOf2
     */
    'payload': CompleteModelErrorOneOf1Payload;
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf2
     */
    'type': CompleteModelErrorOneOf2TypeEnum;
}
export declare const CompleteModelErrorOneOf2TypeEnum: {
    readonly QueryOrPathParsingError: "queryOrPathParsingError";
};
export type CompleteModelErrorOneOf2TypeEnum = typeof CompleteModelErrorOneOf2TypeEnum[keyof typeof CompleteModelErrorOneOf2TypeEnum];
/**
 *
 * @export
 * @interface CompleteModelErrorOneOf3
 */
export interface CompleteModelErrorOneOf3 {
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf3
     */
    'message': string;
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf3
     */
    'type': CompleteModelErrorOneOf3TypeEnum;
}
export declare const CompleteModelErrorOneOf3TypeEnum: {
    readonly Failed: "failed";
};
export type CompleteModelErrorOneOf3TypeEnum = typeof CompleteModelErrorOneOf3TypeEnum[keyof typeof CompleteModelErrorOneOf3TypeEnum];
/**
 *
 * @export
 * @interface CompleteModelErrorOneOf4
 */
export interface CompleteModelErrorOneOf4 {
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf4
     */
    'message': string;
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf4
     */
    'type': CompleteModelErrorOneOf4TypeEnum;
}
export declare const CompleteModelErrorOneOf4TypeEnum: {
    readonly ModelDoesNotSupportGuidance: "modelDoesNotSupportGuidance";
};
export type CompleteModelErrorOneOf4TypeEnum = typeof CompleteModelErrorOneOf4TypeEnum[keyof typeof CompleteModelErrorOneOf4TypeEnum];
/**
 *
 * @export
 * @interface CompleteModelErrorOneOf5
 */
export interface CompleteModelErrorOneOf5 {
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf5
     */
    'message': string;
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf5
     */
    'type': CompleteModelErrorOneOf5TypeEnum;
}
export declare const CompleteModelErrorOneOf5TypeEnum: {
    readonly NoRagDocumentsFound: "noRagDocumentsFound";
};
export type CompleteModelErrorOneOf5TypeEnum = typeof CompleteModelErrorOneOf5TypeEnum[keyof typeof CompleteModelErrorOneOf5TypeEnum];
/**
 *
 * @export
 * @interface CompleteModelErrorOneOf6
 */
export interface CompleteModelErrorOneOf6 {
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf6
     */
    'message': string;
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf6
     */
    'type': CompleteModelErrorOneOf6TypeEnum;
}
export declare const CompleteModelErrorOneOf6TypeEnum: {
    readonly RagRequiresAutoTemplating: "ragRequiresAutoTemplating";
};
export type CompleteModelErrorOneOf6TypeEnum = typeof CompleteModelErrorOneOf6TypeEnum[keyof typeof CompleteModelErrorOneOf6TypeEnum];
/**
 *
 * @export
 * @interface CompleteModelErrorOneOf7
 */
export interface CompleteModelErrorOneOf7 {
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf7
     */
    'message': string;
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf7
     */
    'type': CompleteModelErrorOneOf7TypeEnum;
}
export declare const CompleteModelErrorOneOf7TypeEnum: {
    readonly UnknownBaseModel: "unknownBaseModel";
};
export type CompleteModelErrorOneOf7TypeEnum = typeof CompleteModelErrorOneOf7TypeEnum[keyof typeof CompleteModelErrorOneOf7TypeEnum];
/**
 *
 * @export
 * @interface CompleteModelErrorOneOf8
 */
export interface CompleteModelErrorOneOf8 {
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf8
     */
    'message': string;
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf8
     */
    'type': CompleteModelErrorOneOf8TypeEnum;
}
export declare const CompleteModelErrorOneOf8TypeEnum: {
    readonly UnknownModelAdapter: "unknownModelAdapter";
};
export type CompleteModelErrorOneOf8TypeEnum = typeof CompleteModelErrorOneOf8TypeEnum[keyof typeof CompleteModelErrorOneOf8TypeEnum];
/**
 *
 * @export
 * @interface CompleteModelErrorOneOf9
 */
export interface CompleteModelErrorOneOf9 {
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf9
     */
    'message': string;
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOf9
     */
    'type': CompleteModelErrorOneOf9TypeEnum;
}
export declare const CompleteModelErrorOneOf9TypeEnum: {
    readonly UnknownRagCollection: "unknownRagCollection";
};
export type CompleteModelErrorOneOf9TypeEnum = typeof CompleteModelErrorOneOf9TypeEnum[keyof typeof CompleteModelErrorOneOf9TypeEnum];
/**
 *
 * @export
 * @interface CompleteModelErrorOneOfPayload
 */
export interface CompleteModelErrorOneOfPayload {
    /**
     *
     * @type {Array<CompleteModelErrorOneOfPayloadFlaggedContentInner>}
     * @memberof CompleteModelErrorOneOfPayload
     */
    'flaggedContent': Array<CompleteModelErrorOneOfPayloadFlaggedContentInner>;
}
/**
 *
 * @export
 * @interface CompleteModelErrorOneOfPayloadFlaggedContentInner
 */
export interface CompleteModelErrorOneOfPayloadFlaggedContentInner {
    /**
     *
     * @type {string}
     * @memberof CompleteModelErrorOneOfPayloadFlaggedContentInner
     */
    'sample': string;
}
/**
 *
 * @export
 * @interface CompleteModelSuccess
 */
export interface CompleteModelSuccess {
    /**
     *
     * @type {string}
     * @memberof CompleteModelSuccess
     */
    'finishReason': string;
    /**
     *
     * @type {string}
     * @memberof CompleteModelSuccess
     */
    'generatedOutput': string;
}
/**
 *
 * @export
 * @interface CreateAudioTranscriptionBodyParams
 */
export interface CreateAudioTranscriptionBodyParams {
    /**
     *
     * @type {string}
     * @memberof CreateAudioTranscriptionBodyParams
     */
    'fileId': string;
}
/**
 *
 * @export
 * @interface CreateAudioTranscriptionError
 */
export interface CreateAudioTranscriptionError {
    /**
     *
     * @type {string}
     * @memberof CreateAudioTranscriptionError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface CreateAudioTranscriptionSuccess
 */
export interface CreateAudioTranscriptionSuccess {
    /**
     *
     * @type {string}
     * @memberof CreateAudioTranscriptionSuccess
     */
    'transcriptionId': string;
}
/**
 *
 * @export
 * @interface CreateModelBodyParams
 */
export interface CreateModelBodyParams {
    /**
     *
     * @type {CreateModelBodyParamsInitialHyperparameters}
     * @memberof CreateModelBodyParams
     */
    'initialHyperparameters'?: CreateModelBodyParamsInitialHyperparameters | null;
    /**
     *
     * @type {CreateModelBodyParamsModel}
     * @memberof CreateModelBodyParams
     */
    'model': CreateModelBodyParamsModel;
}
/**
 *
 * @export
 * @interface CreateModelBodyParamsInitialHyperparameters
 */
export interface CreateModelBodyParamsInitialHyperparameters {
    /**
     *
     * @type {CreateModelBodyParamsInitialHyperparametersLoraHyperparameters}
     * @memberof CreateModelBodyParamsInitialHyperparameters
     */
    'loraHyperparameters'?: CreateModelBodyParamsInitialHyperparametersLoraHyperparameters | null;
    /**
     *
     * @type {CreateModelBodyParamsInitialHyperparametersTrainingArguments}
     * @memberof CreateModelBodyParamsInitialHyperparameters
     */
    'trainingArguments'?: CreateModelBodyParamsInitialHyperparametersTrainingArguments | null;
}
/**
 *
 * @export
 * @interface CreateModelBodyParamsInitialHyperparametersLoraHyperparameters
 */
export interface CreateModelBodyParamsInitialHyperparametersLoraHyperparameters {
    /**
     *
     * @type {number}
     * @memberof CreateModelBodyParamsInitialHyperparametersLoraHyperparameters
     */
    'rank'?: number | null;
}
/**
 *
 * @export
 * @interface CreateModelBodyParamsInitialHyperparametersTrainingArguments
 */
export interface CreateModelBodyParamsInitialHyperparametersTrainingArguments {
    /**
     *
     * @type {number}
     * @memberof CreateModelBodyParamsInitialHyperparametersTrainingArguments
     */
    'learningRate'?: number | null;
}
/**
 *
 * @export
 * @interface CreateModelBodyParamsModel
 */
export interface CreateModelBodyParamsModel {
    /**
     * The foundational model you are creating a new instance of for fine-tuning.
     * @type {string}
     * @memberof CreateModelBodyParamsModel
     */
    'baseModelId': string;
    /**
     * What your new fine-tuned model will be called.
     * @type {string}
     * @memberof CreateModelBodyParamsModel
     */
    'name': string;
}
/**
 *
 * @export
 * @interface CreateModelError
 */
export interface CreateModelError {
    /**
     *
     * @type {string}
     * @memberof CreateModelError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface CreateModelSuccess
 */
export interface CreateModelSuccess {
    /**
     *
     * @type {string}
     * @memberof CreateModelSuccess
     */
    'id': string;
}
/**
 *
 * @export
 * @interface CreateRagCollectionBodyParams
 */
export interface CreateRagCollectionBodyParams {
    /**
     *
     * @type {CreateRagCollectionBodyParamsChunker}
     * @memberof CreateRagCollectionBodyParams
     */
    'chunker'?: CreateRagCollectionBodyParamsChunker | null;
    /**
     *
     * @type {Array<CreateRagCollectionBodyParamsFilesInner>}
     * @memberof CreateRagCollectionBodyParams
     */
    'files'?: Array<CreateRagCollectionBodyParamsFilesInner> | null;
    /**
     *
     * @type {string}
     * @memberof CreateRagCollectionBodyParams
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof CreateRagCollectionBodyParams
     */
    'slug': CreateRagCollectionBodyParamsSlugEnum;
}
export declare const CreateRagCollectionBodyParamsSlugEnum: {
    readonly BgeLarge: "bge-large";
};
export type CreateRagCollectionBodyParamsSlugEnum = typeof CreateRagCollectionBodyParamsSlugEnum[keyof typeof CreateRagCollectionBodyParamsSlugEnum];
/**
 * @type CreateRagCollectionBodyParamsChunker
 * @export
 */
export type CreateRagCollectionBodyParamsChunker = {
    chunkerType: 'fileChunker';
} & FileChunker | {
    chunkerType: 'meaningBasedChunker';
} & MeaningBasedChunker | {
    chunkerType: 'normalChunker';
} & NormalChunker | {
    chunkerType: 'sentenceWithContextChunker';
} & SentenceWithContextChunker;
/**
 *
 * @export
 * @interface CreateRagCollectionBodyParamsFilesInner
 */
export interface CreateRagCollectionBodyParamsFilesInner {
    /**
     *
     * @type {string}
     * @memberof CreateRagCollectionBodyParamsFilesInner
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof CreateRagCollectionBodyParamsFilesInner
     */
    'name': string;
}
/**
 *
 * @export
 * @interface CreateRagCollectionError
 */
export interface CreateRagCollectionError {
    /**
     *
     * @type {string}
     * @memberof CreateRagCollectionError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface CreateRagCollectionSuccess
 */
export interface CreateRagCollectionSuccess {
    /**
     *
     * @type {string}
     * @memberof CreateRagCollectionSuccess
     */
    'id': string;
}
/**
 *
 * @export
 * @interface DeleteModelError
 */
export interface DeleteModelError {
    /**
     *
     * @type {string}
     * @memberof DeleteModelError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface DeleteRagCollectionError
 */
export interface DeleteRagCollectionError {
    /**
     *
     * @type {string}
     * @memberof DeleteRagCollectionError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface ExtractEntityBodyParams
 */
export interface ExtractEntityBodyParams {
    /**
     * The document from which to extract data.
     * @type {string}
     * @memberof ExtractEntityBodyParams
     */
    'document': string;
    /**
     * The expected schema of the entity result.
     * @type {{ [key: string]: ExtractEntityBodyParamsSchemaValue; }}
     * @memberof ExtractEntityBodyParams
     */
    'schema': {
        [key: string]: ExtractEntityBodyParamsSchemaValue;
    };
}
/**
 *
 * @export
 * @interface ExtractEntityBodyParamsSchemaValue
 */
export interface ExtractEntityBodyParamsSchemaValue {
    /**
     *
     * @type {boolean}
     * @memberof ExtractEntityBodyParamsSchemaValue
     */
    'required'?: boolean | null;
    /**
     *
     * @type {string}
     * @memberof ExtractEntityBodyParamsSchemaValue
     */
    'type': ExtractEntityBodyParamsSchemaValueTypeEnum;
}
export declare const ExtractEntityBodyParamsSchemaValueTypeEnum: {
    readonly Boolean: "boolean";
    readonly Number: "number";
    readonly String: "string";
};
export type ExtractEntityBodyParamsSchemaValueTypeEnum = typeof ExtractEntityBodyParamsSchemaValueTypeEnum[keyof typeof ExtractEntityBodyParamsSchemaValueTypeEnum];
/**
 *
 * @export
 * @interface ExtractEntityError
 */
export interface ExtractEntityError {
    /**
     *
     * @type {string}
     * @memberof ExtractEntityError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface ExtractEntitySuccess
 */
export interface ExtractEntitySuccess {
    /**
     *
     * @type {{ [key: string]: ExtractEntitySuccessEntityValue; }}
     * @memberof ExtractEntitySuccess
     */
    'entity': {
        [key: string]: ExtractEntitySuccessEntityValue;
    };
}
/**
 *
 * @export
 * @interface ExtractEntitySuccessEntityValue
 */
export interface ExtractEntitySuccessEntityValue {
}
/**
 *
 * @export
 * @interface ExtractPdfError
 */
export interface ExtractPdfError {
    /**
     *
     * @type {string}
     * @memberof ExtractPdfError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface ExtractPdfSuccess
 */
export interface ExtractPdfSuccess {
    /**
     *
     * @type {Array<ExtractPdfSuccessPagesInner>}
     * @memberof ExtractPdfSuccess
     */
    'pages': Array<ExtractPdfSuccessPagesInner>;
    /**
     *
     * @type {string}
     * @memberof ExtractPdfSuccess
     */
    'text': string;
    /**
     *
     * @type {string}
     * @memberof ExtractPdfSuccess
     */
    'title': string | null;
}
/**
 *
 * @export
 * @interface ExtractPdfSuccessPagesInner
 */
export interface ExtractPdfSuccessPagesInner {
    /**
     *
     * @type {Array<ExtractPdfSuccessPagesInnerImagesInner>}
     * @memberof ExtractPdfSuccessPagesInner
     */
    'images': Array<ExtractPdfSuccessPagesInnerImagesInner>;
    /**
     *
     * @type {number}
     * @memberof ExtractPdfSuccessPagesInner
     */
    'pageNumber': number;
    /**
     *
     * @type {Array<ExtractPdfSuccessPagesInnerTablesInner>}
     * @memberof ExtractPdfSuccessPagesInner
     */
    'tables': Array<ExtractPdfSuccessPagesInnerTablesInner>;
    /**
     *
     * @type {string}
     * @memberof ExtractPdfSuccessPagesInner
     */
    'text': string;
    /**
     *
     * @type {Array<ExtractPdfSuccessPagesInnerTextBlocksInner>}
     * @memberof ExtractPdfSuccessPagesInner
     */
    'textBlocks': Array<ExtractPdfSuccessPagesInnerTextBlocksInner>;
}
/**
 *
 * @export
 * @interface ExtractPdfSuccessPagesInnerImagesInner
 */
export interface ExtractPdfSuccessPagesInnerImagesInner {
    /**
     *
     * @type {string}
     * @memberof ExtractPdfSuccessPagesInnerImagesInner
     */
    'data': string;
    /**
     *
     * @type {string}
     * @memberof ExtractPdfSuccessPagesInnerImagesInner
     */
    'format': ExtractPdfSuccessPagesInnerImagesInnerFormatEnum;
}
export declare const ExtractPdfSuccessPagesInnerImagesInnerFormatEnum: {
    readonly Base64Png: "base64-png";
};
export type ExtractPdfSuccessPagesInnerImagesInnerFormatEnum = typeof ExtractPdfSuccessPagesInnerImagesInnerFormatEnum[keyof typeof ExtractPdfSuccessPagesInnerImagesInnerFormatEnum];
/**
 *
 * @export
 * @interface ExtractPdfSuccessPagesInnerTablesInner
 */
export interface ExtractPdfSuccessPagesInnerTablesInner {
    /**
     *
     * @type {string}
     * @memberof ExtractPdfSuccessPagesInnerTablesInner
     */
    'name': string;
    /**
     *
     * @type {Array<ExtractPdfSuccessPagesInnerTablesInnerTableRowsInner>}
     * @memberof ExtractPdfSuccessPagesInnerTablesInner
     */
    'tableRows': Array<ExtractPdfSuccessPagesInnerTablesInnerTableRowsInner>;
}
/**
 *
 * @export
 * @interface ExtractPdfSuccessPagesInnerTablesInnerTableRowsInner
 */
export interface ExtractPdfSuccessPagesInnerTablesInnerTableRowsInner {
    /**
     *
     * @type {Array<ExtractPdfSuccessPagesInnerTablesInnerTableRowsInnerCellsInner>}
     * @memberof ExtractPdfSuccessPagesInnerTablesInnerTableRowsInner
     */
    'cells': Array<ExtractPdfSuccessPagesInnerTablesInnerTableRowsInnerCellsInner>;
    /**
     *
     * @type {string}
     * @memberof ExtractPdfSuccessPagesInnerTablesInnerTableRowsInner
     */
    'type': ExtractPdfSuccessPagesInnerTablesInnerTableRowsInnerTypeEnum;
}
export declare const ExtractPdfSuccessPagesInnerTablesInnerTableRowsInnerTypeEnum: {
    readonly DataRow: "table_data_row";
    readonly Header: "table_header";
};
export type ExtractPdfSuccessPagesInnerTablesInnerTableRowsInnerTypeEnum = typeof ExtractPdfSuccessPagesInnerTablesInnerTableRowsInnerTypeEnum[keyof typeof ExtractPdfSuccessPagesInnerTablesInnerTableRowsInnerTypeEnum];
/**
 *
 * @export
 * @interface ExtractPdfSuccessPagesInnerTablesInnerTableRowsInnerCellsInner
 */
export interface ExtractPdfSuccessPagesInnerTablesInnerTableRowsInnerCellsInner {
    /**
     *
     * @type {string}
     * @memberof ExtractPdfSuccessPagesInnerTablesInnerTableRowsInnerCellsInner
     */
    'cellValue': string;
    /**
     *
     * @type {number}
     * @memberof ExtractPdfSuccessPagesInnerTablesInnerTableRowsInnerCellsInner
     */
    'colSpan': number | null;
    /**
     *
     * @type {number}
     * @memberof ExtractPdfSuccessPagesInnerTablesInnerTableRowsInnerCellsInner
     */
    'rowSpan': number | null;
}
/**
 *
 * @export
 * @interface ExtractPdfSuccessPagesInnerTextBlocksInner
 */
export interface ExtractPdfSuccessPagesInnerTextBlocksInner {
    /**
     *
     * @type {string}
     * @memberof ExtractPdfSuccessPagesInnerTextBlocksInner
     */
    'kind': ExtractPdfSuccessPagesInnerTextBlocksInnerKindEnum;
    /**
     *
     * @type {Array<string>}
     * @memberof ExtractPdfSuccessPagesInnerTextBlocksInner
     */
    'texts': Array<string>;
}
export declare const ExtractPdfSuccessPagesInnerTextBlocksInnerKindEnum: {
    readonly Footer: "footer";
    readonly Header: "header";
    readonly SectionTitle: "section_title";
    readonly Text: "text";
    readonly Title: "title";
};
export type ExtractPdfSuccessPagesInnerTextBlocksInnerKindEnum = typeof ExtractPdfSuccessPagesInnerTextBlocksInnerKindEnum[keyof typeof ExtractPdfSuccessPagesInnerTextBlocksInnerKindEnum];
/**
 *
 * @export
 * @interface FileChunker
 */
export interface FileChunker {
    /**
     *
     * @type {string}
     * @memberof FileChunker
     */
    'chunkerType': FileChunkerChunkerTypeEnum;
}
export declare const FileChunkerChunkerTypeEnum: {
    readonly FileChunker: "fileChunker";
};
export type FileChunkerChunkerTypeEnum = typeof FileChunkerChunkerTypeEnum[keyof typeof FileChunkerChunkerTypeEnum];
/**
 *
 * @export
 * @interface FineTuneModelBodyParams
 */
export interface FineTuneModelBodyParams {
    /**
     *
     * @type {Array<FineTuneModelBodyParamsSamplesInner>}
     * @memberof FineTuneModelBodyParams
     */
    'samples': Array<FineTuneModelBodyParamsSamplesInner>;
}
/**
 *
 * @export
 * @interface FineTuneModelBodyParamsSamplesInner
 */
export interface FineTuneModelBodyParamsSamplesInner {
    /**
     *
     * @type {FineTuneModelBodyParamsSamplesInnerFineTuningParameters}
     * @memberof FineTuneModelBodyParamsSamplesInner
     */
    'fineTuningParameters'?: FineTuneModelBodyParamsSamplesInnerFineTuningParameters | null;
    /**
     *
     * @type {FineTuneModelBodyParamsSamplesInnerInputs}
     * @memberof FineTuneModelBodyParamsSamplesInner
     */
    'inputs': FineTuneModelBodyParamsSamplesInnerInputs;
}
/**
 *
 * @export
 * @interface FineTuneModelBodyParamsSamplesInnerFineTuningParameters
 */
export interface FineTuneModelBodyParamsSamplesInnerFineTuningParameters {
    /**
     *
     * @type {number}
     * @memberof FineTuneModelBodyParamsSamplesInnerFineTuningParameters
     */
    'multiplier'?: number | null;
}
/**
 *
 * @export
 * @interface FineTuneModelBodyParamsSamplesInnerInputs
 */
export interface FineTuneModelBodyParamsSamplesInnerInputs {
}
/**
 *
 * @export
 * @interface FineTuneModelBodyParamsSamplesInnerInputsAnyOfInner
 */
export interface FineTuneModelBodyParamsSamplesInnerInputsAnyOfInner {
    /**
     *
     * @type {boolean}
     * @memberof FineTuneModelBodyParamsSamplesInnerInputsAnyOfInner
     */
    'parseSpecialTokens'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof FineTuneModelBodyParamsSamplesInnerInputsAnyOfInner
     */
    'trainable'?: boolean;
    /**
     *
     * @type {string}
     * @memberof FineTuneModelBodyParamsSamplesInnerInputsAnyOfInner
     */
    'value': string;
}
/**
 * @type FineTuneModelError
 * @export
 */
export type FineTuneModelError = CompleteModelErrorOneOf | CompleteModelErrorOneOf1 | CompleteModelErrorOneOf10 | CompleteModelErrorOneOf2 | CompleteModelErrorOneOf8 | FineTuneModelErrorOneOf | FineTuneModelErrorOneOf1;
/**
 *
 * @export
 * @interface FineTuneModelErrorOneOf
 */
export interface FineTuneModelErrorOneOf {
    /**
     *
     * @type {string}
     * @memberof FineTuneModelErrorOneOf
     */
    'message': string;
    /**
     *
     * @type {string}
     * @memberof FineTuneModelErrorOneOf
     */
    'type': FineTuneModelErrorOneOfTypeEnum;
}
export declare const FineTuneModelErrorOneOfTypeEnum: {
    readonly ModelIncapableOfFineTuning: "modelIncapableOfFineTuning";
};
export type FineTuneModelErrorOneOfTypeEnum = typeof FineTuneModelErrorOneOfTypeEnum[keyof typeof FineTuneModelErrorOneOfTypeEnum];
/**
 *
 * @export
 * @interface FineTuneModelErrorOneOf1
 */
export interface FineTuneModelErrorOneOf1 {
    /**
     *
     * @type {string}
     * @memberof FineTuneModelErrorOneOf1
     */
    'message': string;
    /**
     *
     * @type {string}
     * @memberof FineTuneModelErrorOneOf1
     */
    'type': FineTuneModelErrorOneOf1TypeEnum;
}
export declare const FineTuneModelErrorOneOf1TypeEnum: {
    readonly NanLoss: "nanLoss";
};
export type FineTuneModelErrorOneOf1TypeEnum = typeof FineTuneModelErrorOneOf1TypeEnum[keyof typeof FineTuneModelErrorOneOf1TypeEnum];
/**
 *
 * @export
 * @interface FineTuneModelSuccess
 */
export interface FineTuneModelSuccess {
    /**
     *
     * @type {number}
     * @memberof FineTuneModelSuccess
     */
    'numberOfTrainableTokens': number;
    /**
     *
     * @type {number}
     * @memberof FineTuneModelSuccess
     */
    'sumLoss': number;
}
/**
 *
 * @export
 * @interface GenerateAnswerBodyParams
 */
export interface GenerateAnswerBodyParams {
    /**
     *
     * @type {string}
     * @memberof GenerateAnswerBodyParams
     */
    'question': string;
    /**
     *
     * @type {GenerateAnswerBodyParamsSource}
     * @memberof GenerateAnswerBodyParams
     */
    'source': GenerateAnswerBodyParamsSource;
}
/**
 * @type GenerateAnswerBodyParamsSource
 * @export
 */
export type GenerateAnswerBodyParamsSource = GenerateAnswerBodyParamsSourceOneOf | GenerateAnswerBodyParamsSourceOneOf1;
/**
 * The reference RAG that must be used to answer the question.
 * @export
 * @interface GenerateAnswerBodyParamsSourceOneOf
 */
export interface GenerateAnswerBodyParamsSourceOneOf {
    /**
     *
     * @type {string}
     * @memberof GenerateAnswerBodyParamsSourceOneOf
     */
    'collectionId': string;
    /**
     *
     * @type {string}
     * @memberof GenerateAnswerBodyParamsSourceOneOf
     */
    'type': GenerateAnswerBodyParamsSourceOneOfTypeEnum;
}
export declare const GenerateAnswerBodyParamsSourceOneOfTypeEnum: {
    readonly Rag: "rag";
};
export type GenerateAnswerBodyParamsSourceOneOfTypeEnum = typeof GenerateAnswerBodyParamsSourceOneOfTypeEnum[keyof typeof GenerateAnswerBodyParamsSourceOneOfTypeEnum];
/**
 * The document that must be used to answer the question.
 * @export
 * @interface GenerateAnswerBodyParamsSourceOneOf1
 */
export interface GenerateAnswerBodyParamsSourceOneOf1 {
    /**
     *
     * @type {string}
     * @memberof GenerateAnswerBodyParamsSourceOneOf1
     */
    'type': GenerateAnswerBodyParamsSourceOneOf1TypeEnum;
    /**
     *
     * @type {string}
     * @memberof GenerateAnswerBodyParamsSourceOneOf1
     */
    'value': string;
}
export declare const GenerateAnswerBodyParamsSourceOneOf1TypeEnum: {
    readonly Document: "document";
};
export type GenerateAnswerBodyParamsSourceOneOf1TypeEnum = typeof GenerateAnswerBodyParamsSourceOneOf1TypeEnum[keyof typeof GenerateAnswerBodyParamsSourceOneOf1TypeEnum];
/**
 *
 * @export
 * @interface GenerateAnswerError
 */
export interface GenerateAnswerError {
    /**
     *
     * @type {string}
     * @memberof GenerateAnswerError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface GenerateAnswerSuccess
 */
export interface GenerateAnswerSuccess {
    /**
     *
     * @type {string}
     * @memberof GenerateAnswerSuccess
     */
    'answer': string;
    /**
     *
     * @type {GenerateAnswerSuccessRagContext}
     * @memberof GenerateAnswerSuccess
     */
    'ragContext'?: GenerateAnswerSuccessRagContext;
}
/**
 *
 * @export
 * @interface GenerateAnswerSuccessRagContext
 */
export interface GenerateAnswerSuccessRagContext {
    /**
     *
     * @type {Array<GenerateAnswerSuccessRagContextDocumentsInner>}
     * @memberof GenerateAnswerSuccessRagContext
     */
    'documents': Array<GenerateAnswerSuccessRagContextDocumentsInner>;
}
/**
 *
 * @export
 * @interface GenerateAnswerSuccessRagContextDocumentsInner
 */
export interface GenerateAnswerSuccessRagContextDocumentsInner {
    /**
     *
     * @type {string}
     * @memberof GenerateAnswerSuccessRagContextDocumentsInner
     */
    'content': string;
    /**
     *
     * @type {string}
     * @memberof GenerateAnswerSuccessRagContextDocumentsInner
     */
    'fileName': string;
}
/**
 *
 * @export
 * @interface GenerateEmbeddingBodyParams
 */
export interface GenerateEmbeddingBodyParams {
    /**
     *
     * @type {Array<GenerateEmbeddingBodyParamsInputsInner>}
     * @memberof GenerateEmbeddingBodyParams
     */
    'inputs': Array<GenerateEmbeddingBodyParamsInputsInner>;
}
/**
 *
 * @export
 * @interface GenerateEmbeddingBodyParamsInputsInner
 */
export interface GenerateEmbeddingBodyParamsInputsInner {
    /**
     *
     * @type {string}
     * @memberof GenerateEmbeddingBodyParamsInputsInner
     */
    'input': string;
}
/**
 *
 * @export
 * @interface GenerateEmbeddingError
 */
export interface GenerateEmbeddingError {
    /**
     *
     * @type {string}
     * @memberof GenerateEmbeddingError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface GenerateEmbeddingSuccess
 */
export interface GenerateEmbeddingSuccess {
    /**
     *
     * @type {Array<GenerateEmbeddingSuccessEmbeddingsInner>}
     * @memberof GenerateEmbeddingSuccess
     */
    'embeddings': Array<GenerateEmbeddingSuccessEmbeddingsInner>;
}
/**
 *
 * @export
 * @interface GenerateEmbeddingSuccessEmbeddingsInner
 */
export interface GenerateEmbeddingSuccessEmbeddingsInner {
    /**
     *
     * @type {Array<number>}
     * @memberof GenerateEmbeddingSuccessEmbeddingsInner
     */
    'embedding': Array<number>;
    /**
     *
     * @type {number}
     * @memberof GenerateEmbeddingSuccessEmbeddingsInner
     */
    'index': number;
}
/**
 *
 * @export
 * @interface GetAudioTranscriptionError
 */
export interface GetAudioTranscriptionError {
    /**
     *
     * @type {string}
     * @memberof GetAudioTranscriptionError
     */
    'message': string;
}
/**
 * @type GetAudioTranscriptionSuccess
 * @export
 */
export type GetAudioTranscriptionSuccess = GetAudioTranscriptionSuccessOneOf | GetAudioTranscriptionSuccessOneOf1;
/**
 *
 * @export
 * @interface GetAudioTranscriptionSuccessOneOf
 */
export interface GetAudioTranscriptionSuccessOneOf {
    /**
     *
     * @type {any}
     * @memberof GetAudioTranscriptionSuccessOneOf
     */
    'result': any | null;
    /**
     *
     * @type {string}
     * @memberof GetAudioTranscriptionSuccessOneOf
     */
    'status': GetAudioTranscriptionSuccessOneOfStatusEnum;
}
export declare const GetAudioTranscriptionSuccessOneOfStatusEnum: {
    readonly Cancelled: "cancelled";
    readonly Failed: "failed";
    readonly Pending: "pending";
    readonly PendingCancellation: "pendingCancellation";
    readonly Running: "running";
};
export type GetAudioTranscriptionSuccessOneOfStatusEnum = typeof GetAudioTranscriptionSuccessOneOfStatusEnum[keyof typeof GetAudioTranscriptionSuccessOneOfStatusEnum];
/**
 *
 * @export
 * @interface GetAudioTranscriptionSuccessOneOf1
 */
export interface GetAudioTranscriptionSuccessOneOf1 {
    /**
     *
     * @type {GetAudioTranscriptionSuccessOneOf1Result}
     * @memberof GetAudioTranscriptionSuccessOneOf1
     */
    'result': GetAudioTranscriptionSuccessOneOf1Result;
    /**
     *
     * @type {string}
     * @memberof GetAudioTranscriptionSuccessOneOf1
     */
    'status': GetAudioTranscriptionSuccessOneOf1StatusEnum;
}
export declare const GetAudioTranscriptionSuccessOneOf1StatusEnum: {
    readonly Succeeded: "succeeded";
};
export type GetAudioTranscriptionSuccessOneOf1StatusEnum = typeof GetAudioTranscriptionSuccessOneOf1StatusEnum[keyof typeof GetAudioTranscriptionSuccessOneOf1StatusEnum];
/**
 *
 * @export
 * @interface GetAudioTranscriptionSuccessOneOf1Result
 */
export interface GetAudioTranscriptionSuccessOneOf1Result {
    /**
     *
     * @type {string}
     * @memberof GetAudioTranscriptionSuccessOneOf1Result
     */
    'text': string;
}
/**
 *
 * @export
 * @interface GetModelError
 */
export interface GetModelError {
    /**
     *
     * @type {string}
     * @memberof GetModelError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface GetModelSuccess
 */
export interface GetModelSuccess {
    /**
     *
     * @type {string}
     * @memberof GetModelSuccess
     */
    'baseModelId': string;
    /**
     *
     * @type {string}
     * @memberof GetModelSuccess
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof GetModelSuccess
     */
    'latestUpdateTime': string;
    /**
     *
     * @type {string}
     * @memberof GetModelSuccess
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof GetModelSuccess
     */
    'type': GetModelSuccessTypeEnum;
}
export declare const GetModelSuccessTypeEnum: {
    readonly ModelAdapter: "modelAdapter";
};
export type GetModelSuccessTypeEnum = typeof GetModelSuccessTypeEnum[keyof typeof GetModelSuccessTypeEnum];
/**
 *
 * @export
 * @interface GetRagCollectionError
 */
export interface GetRagCollectionError {
    /**
     *
     * @type {string}
     * @memberof GetRagCollectionError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface GetRagCollectionSuccess
 */
export interface GetRagCollectionSuccess {
    /**
     *
     * @type {ListRagCollectionsSuccessRagCollectionsInnerChunker}
     * @memberof GetRagCollectionSuccess
     */
    'chunker': ListRagCollectionsSuccessRagCollectionsInnerChunker;
    /**
     *
     * @type {string}
     * @memberof GetRagCollectionSuccess
     */
    'creationTime': string;
    /**
     *
     * @type {Array<GetRagCollectionSuccessFilesInner>}
     * @memberof GetRagCollectionSuccess
     */
    'files': Array<GetRagCollectionSuccessFilesInner>;
    /**
     *
     * @type {string}
     * @memberof GetRagCollectionSuccess
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof GetRagCollectionSuccess
     */
    'latestUpdateTime': string;
    /**
     *
     * @type {string}
     * @memberof GetRagCollectionSuccess
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof GetRagCollectionSuccess
     */
    'slug': GetRagCollectionSuccessSlugEnum;
}
export declare const GetRagCollectionSuccessSlugEnum: {
    readonly BgeLarge: "bge-large";
};
export type GetRagCollectionSuccessSlugEnum = typeof GetRagCollectionSuccessSlugEnum[keyof typeof GetRagCollectionSuccessSlugEnum];
/**
 *
 * @export
 * @interface GetRagCollectionSuccessFilesInner
 */
export interface GetRagCollectionSuccessFilesInner {
    /**
     *
     * @type {string}
     * @memberof GetRagCollectionSuccessFilesInner
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof GetRagCollectionSuccessFilesInner
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof GetRagCollectionSuccessFilesInner
     */
    'status': GetRagCollectionSuccessFilesInnerStatusEnum;
}
export declare const GetRagCollectionSuccessFilesInnerStatusEnum: {
    readonly Cancelled: "cancelled";
    readonly Failed: "failed";
    readonly Succeeded: "succeeded";
    readonly Pending: "pending";
    readonly PendingCancellation: "pendingCancellation";
    readonly Running: "running";
};
export type GetRagCollectionSuccessFilesInnerStatusEnum = typeof GetRagCollectionSuccessFilesInnerStatusEnum[keyof typeof GetRagCollectionSuccessFilesInnerStatusEnum];
/**
 *
 * @export
 * @interface ListEmbeddingsError
 */
export interface ListEmbeddingsError {
    /**
     *
     * @type {string}
     * @memberof ListEmbeddingsError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface ListEmbeddingsSuccess
 */
export interface ListEmbeddingsSuccess {
    /**
     *
     * @type {Array<ListEmbeddingsSuccessEmbeddingsModelsInner>}
     * @memberof ListEmbeddingsSuccess
     */
    'embeddingsModels': Array<ListEmbeddingsSuccessEmbeddingsModelsInner>;
}
/**
 *
 * @export
 * @interface ListEmbeddingsSuccessEmbeddingsModelsInner
 */
export interface ListEmbeddingsSuccessEmbeddingsModelsInner {
    /**
     *
     * @type {string}
     * @memberof ListEmbeddingsSuccessEmbeddingsModelsInner
     */
    'slug': ListEmbeddingsSuccessEmbeddingsModelsInnerSlugEnum;
}
export declare const ListEmbeddingsSuccessEmbeddingsModelsInnerSlugEnum: {
    readonly BgeLarge: "bge-large";
};
export type ListEmbeddingsSuccessEmbeddingsModelsInnerSlugEnum = typeof ListEmbeddingsSuccessEmbeddingsModelsInnerSlugEnum[keyof typeof ListEmbeddingsSuccessEmbeddingsModelsInnerSlugEnum];
/**
 *
 * @export
 * @interface ListModelsError
 */
export interface ListModelsError {
    /**
     *
     * @type {string}
     * @memberof ListModelsError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface ListModelsSuccess
 */
export interface ListModelsSuccess {
    /**
     *
     * @type {Array<ListModelsSuccessModelsInner>}
     * @memberof ListModelsSuccess
     */
    'models': Array<ListModelsSuccessModelsInner>;
}
/**
 * @type ListModelsSuccessModelsInner
 * @export
 */
export type ListModelsSuccessModelsInner = BaseModel | ModelAdapter;
/**
 *
 * @export
 * @interface ListRagCollectionsError
 */
export interface ListRagCollectionsError {
    /**
     *
     * @type {string}
     * @memberof ListRagCollectionsError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface ListRagCollectionsSuccess
 */
export interface ListRagCollectionsSuccess {
    /**
     *
     * @type {Array<ListRagCollectionsSuccessRagCollectionsInner>}
     * @memberof ListRagCollectionsSuccess
     */
    'ragCollections': Array<ListRagCollectionsSuccessRagCollectionsInner>;
}
/**
 *
 * @export
 * @interface ListRagCollectionsSuccessRagCollectionsInner
 */
export interface ListRagCollectionsSuccessRagCollectionsInner {
    /**
     *
     * @type {ListRagCollectionsSuccessRagCollectionsInnerChunker}
     * @memberof ListRagCollectionsSuccessRagCollectionsInner
     */
    'chunker': ListRagCollectionsSuccessRagCollectionsInnerChunker;
    /**
     *
     * @type {string}
     * @memberof ListRagCollectionsSuccessRagCollectionsInner
     */
    'creationTime': string;
    /**
     *
     * @type {string}
     * @memberof ListRagCollectionsSuccessRagCollectionsInner
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof ListRagCollectionsSuccessRagCollectionsInner
     */
    'latestUpdateTime': string;
    /**
     *
     * @type {string}
     * @memberof ListRagCollectionsSuccessRagCollectionsInner
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof ListRagCollectionsSuccessRagCollectionsInner
     */
    'slug': ListRagCollectionsSuccessRagCollectionsInnerSlugEnum;
}
export declare const ListRagCollectionsSuccessRagCollectionsInnerSlugEnum: {
    readonly BgeLarge: "bge-large";
};
export type ListRagCollectionsSuccessRagCollectionsInnerSlugEnum = typeof ListRagCollectionsSuccessRagCollectionsInnerSlugEnum[keyof typeof ListRagCollectionsSuccessRagCollectionsInnerSlugEnum];
/**
 * @type ListRagCollectionsSuccessRagCollectionsInnerChunker
 * @export
 */
export type ListRagCollectionsSuccessRagCollectionsInnerChunker = ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf | ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf1 | ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2 | ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf3;
/**
 *
 * @export
 * @interface ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf
 */
export interface ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf {
    /**
     *
     * @type {string}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf
     */
    'chunkerType': ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOfChunkerTypeEnum;
}
export declare const ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOfChunkerTypeEnum: {
    readonly FileChunker: "fileChunker";
};
export type ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOfChunkerTypeEnum = typeof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOfChunkerTypeEnum[keyof typeof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOfChunkerTypeEnum];
/**
 *
 * @export
 * @interface ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf1
 */
export interface ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf1 {
    /**
     *
     * @type {string}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf1
     */
    'chunkerType': ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf1ChunkerTypeEnum;
    /**
     *
     * @type {number}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf1
     */
    'contextSentences': number;
    /**
     *
     * @type {number}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf1
     */
    'overlap': number;
    /**
     *
     * @type {number}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf1
     */
    'size': number;
}
export declare const ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf1ChunkerTypeEnum: {
    readonly SentenceWithContextChunker: "sentenceWithContextChunker";
};
export type ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf1ChunkerTypeEnum = typeof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf1ChunkerTypeEnum[keyof typeof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf1ChunkerTypeEnum];
/**
 *
 * @export
 * @interface ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2
 */
export interface ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2 {
    /**
     *
     * @type {string}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2
     */
    'chunkerType': ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2ChunkerTypeEnum;
    /**
     *
     * @type {number}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2
     */
    'overlap': number;
    /**
     *
     * @type {number}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2
     */
    'sentenceGroupLength': number;
    /**
     *
     * @type {number}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2
     */
    'similiarityPercentThreshold': number;
    /**
     *
     * @type {number}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2
     */
    'size': number;
}
export declare const ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2ChunkerTypeEnum: {
    readonly MeaningBasedChunker: "meaningBasedChunker";
};
export type ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2ChunkerTypeEnum = typeof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2ChunkerTypeEnum[keyof typeof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf2ChunkerTypeEnum];
/**
 *
 * @export
 * @interface ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf3
 */
export interface ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf3 {
    /**
     *
     * @type {string}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf3
     */
    'chunkerType': ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf3ChunkerTypeEnum;
    /**
     *
     * @type {number}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf3
     */
    'overlap': number;
    /**
     *
     * @type {number}
     * @memberof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf3
     */
    'size': number;
}
export declare const ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf3ChunkerTypeEnum: {
    readonly NormalChunker: "normalChunker";
};
export type ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf3ChunkerTypeEnum = typeof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf3ChunkerTypeEnum[keyof typeof ListRagCollectionsSuccessRagCollectionsInnerChunkerOneOf3ChunkerTypeEnum];
/**
 *
 * @export
 * @interface MeaningBasedChunker
 */
export interface MeaningBasedChunker {
    /**
     *
     * @type {string}
     * @memberof MeaningBasedChunker
     */
    'chunkerType': MeaningBasedChunkerChunkerTypeEnum;
    /**
     *
     * @type {number}
     * @memberof MeaningBasedChunker
     */
    'overlap'?: number | null;
    /**
     *
     * @type {number}
     * @memberof MeaningBasedChunker
     */
    'sentenceGroupLength'?: number | null;
    /**
     *
     * @type {number}
     * @memberof MeaningBasedChunker
     */
    'similiarityPercentThreshold'?: number | null;
    /**
     *
     * @type {number}
     * @memberof MeaningBasedChunker
     */
    'size'?: number | null;
}
export declare const MeaningBasedChunkerChunkerTypeEnum: {
    readonly MeaningBasedChunker: "meaningBasedChunker";
};
export type MeaningBasedChunkerChunkerTypeEnum = typeof MeaningBasedChunkerChunkerTypeEnum[keyof typeof MeaningBasedChunkerChunkerTypeEnum];
/**
 *
 * @export
 * @interface ModelAdapter
 */
export interface ModelAdapter {
    /**
     *
     * @type {string}
     * @memberof ModelAdapter
     */
    'baseModelId': string;
    /**
     *
     * @type {string}
     * @memberof ModelAdapter
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof ModelAdapter
     */
    'latestUpdateTime': string;
    /**
     *
     * @type {string}
     * @memberof ModelAdapter
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof ModelAdapter
     */
    'type': ModelAdapterTypeEnum;
}
export declare const ModelAdapterTypeEnum: {
    readonly ModelAdapter: "modelAdapter";
};
export type ModelAdapterTypeEnum = typeof ModelAdapterTypeEnum[keyof typeof ModelAdapterTypeEnum];
/**
 *
 * @export
 * @interface NormalChunker
 */
export interface NormalChunker {
    /**
     *
     * @type {string}
     * @memberof NormalChunker
     */
    'chunkerType': NormalChunkerChunkerTypeEnum;
    /**
     *
     * @type {number}
     * @memberof NormalChunker
     */
    'overlap'?: number | null;
    /**
     *
     * @type {number}
     * @memberof NormalChunker
     */
    'size'?: number | null;
}
export declare const NormalChunkerChunkerTypeEnum: {
    readonly NormalChunker: "normalChunker";
};
export type NormalChunkerChunkerTypeEnum = typeof NormalChunkerChunkerTypeEnum[keyof typeof NormalChunkerChunkerTypeEnum];
/**
 *
 * @export
 * @interface PersonalizeDocumentBodyParams
 */
export interface PersonalizeDocumentBodyParams {
    /**
     * The description of the audience that the document should be personalized for.
     * @type {string}
     * @memberof PersonalizeDocumentBodyParams
     */
    'audienceDescription': string;
    /**
     * The document that will be personalized.
     * @type {string}
     * @memberof PersonalizeDocumentBodyParams
     */
    'document': string;
}
/**
 *
 * @export
 * @interface PersonalizeDocumentError
 */
export interface PersonalizeDocumentError {
    /**
     *
     * @type {string}
     * @memberof PersonalizeDocumentError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface PersonalizeDocumentSuccess
 */
export interface PersonalizeDocumentSuccess {
    /**
     *
     * @type {string}
     * @memberof PersonalizeDocumentSuccess
     */
    'personalizedDocument': string;
}
/**
 *
 * @export
 * @interface SentenceWithContextChunker
 */
export interface SentenceWithContextChunker {
    /**
     *
     * @type {string}
     * @memberof SentenceWithContextChunker
     */
    'chunkerType': SentenceWithContextChunkerChunkerTypeEnum;
    /**
     *
     * @type {number}
     * @memberof SentenceWithContextChunker
     */
    'contextSentences'?: number | null;
    /**
     *
     * @type {number}
     * @memberof SentenceWithContextChunker
     */
    'overlap'?: number | null;
    /**
     *
     * @type {number}
     * @memberof SentenceWithContextChunker
     */
    'size'?: number | null;
}
export declare const SentenceWithContextChunkerChunkerTypeEnum: {
    readonly SentenceWithContextChunker: "sentenceWithContextChunker";
};
export type SentenceWithContextChunkerChunkerTypeEnum = typeof SentenceWithContextChunkerChunkerTypeEnum[keyof typeof SentenceWithContextChunkerChunkerTypeEnum];
/**
 *
 * @export
 * @interface SummarizeDocumentBodyParams
 */
export interface SummarizeDocumentBodyParams {
    /**
     * The document to summarize.
     * @type {string}
     * @memberof SummarizeDocumentBodyParams
     */
    'document': string;
    /**
     * Examples of how to summarize documents.
     * @type {Array<SummarizeDocumentBodyParamsExamplesInner>}
     * @memberof SummarizeDocumentBodyParams
     */
    'examples'?: Array<SummarizeDocumentBodyParamsExamplesInner> | null;
    /**
     * Roughly how long the summary should be.
     * @type {string}
     * @memberof SummarizeDocumentBodyParams
     */
    'length'?: SummarizeDocumentBodyParamsLengthEnum;
}
export declare const SummarizeDocumentBodyParamsLengthEnum: {
    readonly Short: "short";
    readonly Medium: "medium";
    readonly Long: "long";
};
export type SummarizeDocumentBodyParamsLengthEnum = typeof SummarizeDocumentBodyParamsLengthEnum[keyof typeof SummarizeDocumentBodyParamsLengthEnum];
/**
 *
 * @export
 * @interface SummarizeDocumentBodyParamsExamplesInner
 */
export interface SummarizeDocumentBodyParamsExamplesInner {
    /**
     *
     * @type {string}
     * @memberof SummarizeDocumentBodyParamsExamplesInner
     */
    'document': string;
    /**
     *
     * @type {string}
     * @memberof SummarizeDocumentBodyParamsExamplesInner
     */
    'summary': string;
}
/**
 *
 * @export
 * @interface SummarizeDocumentError
 */
export interface SummarizeDocumentError {
    /**
     *
     * @type {string}
     * @memberof SummarizeDocumentError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface SummarizeDocumentSuccess
 */
export interface SummarizeDocumentSuccess {
    /**
     *
     * @type {string}
     * @memberof SummarizeDocumentSuccess
     */
    'summary': string;
}
/**
 *
 * @export
 * @interface UploadFileError
 */
export interface UploadFileError {
    /**
     *
     * @type {string}
     * @memberof UploadFileError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface UploadFileSuccess
 */
export interface UploadFileSuccess {
    /**
     *
     * @type {string}
     * @memberof UploadFileSuccess
     */
    'id': string;
}
/**
 * BlocksApi - axios parameter creator
 * @export
 */
export declare const BlocksApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Analyzes text to determine the emotional tone of the message.
     * @summary Sentiment analysis
     * @param {string} xGradientWorkspaceId
     * @param {AnalyzeSentimentBodyParams} analyzeSentimentBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    analyzeSentiment: (xGradientWorkspaceId: string, analyzeSentimentBodyParams: AnalyzeSentimentBodyParams, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Creates an audio transcription job.
     * @summary Create audio transcription
     * @param {string} xGradientWorkspaceId
     * @param {CreateAudioTranscriptionBodyParams} createAudioTranscriptionBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAudioTranscription: (xGradientWorkspaceId: string, createAudioTranscriptionBodyParams: CreateAudioTranscriptionBodyParams, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Extracts an entity from the document with the specified fields and types.
     * @summary Entity extraction
     * @param {string} xGradientWorkspaceId
     * @param {ExtractEntityBodyParams} extractEntityBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    extractEntity: (xGradientWorkspaceId: string, extractEntityBodyParams: ExtractEntityBodyParams, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Extracts content from the PDF.
     * @summary PDF extraction
     * @param {string} xGradientWorkspaceId
     * @param {File} file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    extractPdf: (xGradientWorkspaceId: string, file: File, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Answers questions using the provided context.
     * @summary Document question & answer
     * @param {string} xGradientWorkspaceId
     * @param {GenerateAnswerBodyParams} generateAnswerBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateAnswer: (xGradientWorkspaceId: string, generateAnswerBodyParams: GenerateAnswerBodyParams, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Gets the result of the audio transcription job.
     * @summary Get audio transcription
     * @param {string} transcriptionId
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAudioTranscription: (transcriptionId: string, xGradientWorkspaceId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Personalizes the document in a tone and style specific to the described target audience.
     * @summary Document personalization
     * @param {string} xGradientWorkspaceId
     * @param {PersonalizeDocumentBodyParams} personalizeDocumentBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    personalizeDocument: (xGradientWorkspaceId: string, personalizeDocumentBodyParams: PersonalizeDocumentBodyParams, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Generates a summary of the document using the provided guidance.
     * @summary Document summary
     * @param {string} xGradientWorkspaceId
     * @param {SummarizeDocumentBodyParams} summarizeDocumentBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    summarizeDocument: (xGradientWorkspaceId: string, summarizeDocumentBodyParams: SummarizeDocumentBodyParams, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BlocksApi - functional programming interface
 * @export
 */
export declare const BlocksApiFp: (configuration?: Configuration) => {
    /**
     * Analyzes text to determine the emotional tone of the message.
     * @summary Sentiment analysis
     * @param {string} xGradientWorkspaceId
     * @param {AnalyzeSentimentBodyParams} analyzeSentimentBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    analyzeSentiment(xGradientWorkspaceId: string, analyzeSentimentBodyParams: AnalyzeSentimentBodyParams, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AnalyzeSentimentSuccess>>;
    /**
     * Creates an audio transcription job.
     * @summary Create audio transcription
     * @param {string} xGradientWorkspaceId
     * @param {CreateAudioTranscriptionBodyParams} createAudioTranscriptionBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAudioTranscription(xGradientWorkspaceId: string, createAudioTranscriptionBodyParams: CreateAudioTranscriptionBodyParams, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateAudioTranscriptionSuccess>>;
    /**
     * Extracts an entity from the document with the specified fields and types.
     * @summary Entity extraction
     * @param {string} xGradientWorkspaceId
     * @param {ExtractEntityBodyParams} extractEntityBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    extractEntity(xGradientWorkspaceId: string, extractEntityBodyParams: ExtractEntityBodyParams, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ExtractEntitySuccess>>;
    /**
     * Extracts content from the PDF.
     * @summary PDF extraction
     * @param {string} xGradientWorkspaceId
     * @param {File} file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    extractPdf(xGradientWorkspaceId: string, file: File, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ExtractPdfSuccess>>;
    /**
     * Answers questions using the provided context.
     * @summary Document question & answer
     * @param {string} xGradientWorkspaceId
     * @param {GenerateAnswerBodyParams} generateAnswerBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateAnswer(xGradientWorkspaceId: string, generateAnswerBodyParams: GenerateAnswerBodyParams, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GenerateAnswerSuccess>>;
    /**
     * Gets the result of the audio transcription job.
     * @summary Get audio transcription
     * @param {string} transcriptionId
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAudioTranscription(transcriptionId: string, xGradientWorkspaceId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetAudioTranscriptionSuccess>>;
    /**
     * Personalizes the document in a tone and style specific to the described target audience.
     * @summary Document personalization
     * @param {string} xGradientWorkspaceId
     * @param {PersonalizeDocumentBodyParams} personalizeDocumentBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    personalizeDocument(xGradientWorkspaceId: string, personalizeDocumentBodyParams: PersonalizeDocumentBodyParams, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PersonalizeDocumentSuccess>>;
    /**
     * Generates a summary of the document using the provided guidance.
     * @summary Document summary
     * @param {string} xGradientWorkspaceId
     * @param {SummarizeDocumentBodyParams} summarizeDocumentBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    summarizeDocument(xGradientWorkspaceId: string, summarizeDocumentBodyParams: SummarizeDocumentBodyParams, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SummarizeDocumentSuccess>>;
};
/**
 * BlocksApi - factory interface
 * @export
 */
export declare const BlocksApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Analyzes text to determine the emotional tone of the message.
     * @summary Sentiment analysis
     * @param {BlocksApiAnalyzeSentimentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    analyzeSentiment(requestParameters: BlocksApiAnalyzeSentimentRequest, options?: AxiosRequestConfig): AxiosPromise<AnalyzeSentimentSuccess>;
    /**
     * Creates an audio transcription job.
     * @summary Create audio transcription
     * @param {BlocksApiCreateAudioTranscriptionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAudioTranscription(requestParameters: BlocksApiCreateAudioTranscriptionRequest, options?: AxiosRequestConfig): AxiosPromise<CreateAudioTranscriptionSuccess>;
    /**
     * Extracts an entity from the document with the specified fields and types.
     * @summary Entity extraction
     * @param {BlocksApiExtractEntityRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    extractEntity(requestParameters: BlocksApiExtractEntityRequest, options?: AxiosRequestConfig): AxiosPromise<ExtractEntitySuccess>;
    /**
     * Extracts content from the PDF.
     * @summary PDF extraction
     * @param {BlocksApiExtractPdfRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    extractPdf(requestParameters: BlocksApiExtractPdfRequest, options?: AxiosRequestConfig): AxiosPromise<ExtractPdfSuccess>;
    /**
     * Answers questions using the provided context.
     * @summary Document question & answer
     * @param {BlocksApiGenerateAnswerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateAnswer(requestParameters: BlocksApiGenerateAnswerRequest, options?: AxiosRequestConfig): AxiosPromise<GenerateAnswerSuccess>;
    /**
     * Gets the result of the audio transcription job.
     * @summary Get audio transcription
     * @param {BlocksApiGetAudioTranscriptionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAudioTranscription(requestParameters: BlocksApiGetAudioTranscriptionRequest, options?: AxiosRequestConfig): AxiosPromise<GetAudioTranscriptionSuccess>;
    /**
     * Personalizes the document in a tone and style specific to the described target audience.
     * @summary Document personalization
     * @param {BlocksApiPersonalizeDocumentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    personalizeDocument(requestParameters: BlocksApiPersonalizeDocumentRequest, options?: AxiosRequestConfig): AxiosPromise<PersonalizeDocumentSuccess>;
    /**
     * Generates a summary of the document using the provided guidance.
     * @summary Document summary
     * @param {BlocksApiSummarizeDocumentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    summarizeDocument(requestParameters: BlocksApiSummarizeDocumentRequest, options?: AxiosRequestConfig): AxiosPromise<SummarizeDocumentSuccess>;
};
/**
 * Request parameters for analyzeSentiment operation in BlocksApi.
 * @export
 * @interface BlocksApiAnalyzeSentimentRequest
 */
export interface BlocksApiAnalyzeSentimentRequest {
    /**
     *
     * @type {string}
     * @memberof BlocksApiAnalyzeSentiment
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {AnalyzeSentimentBodyParams}
     * @memberof BlocksApiAnalyzeSentiment
     */
    readonly analyzeSentimentBodyParams: AnalyzeSentimentBodyParams;
}
/**
 * Request parameters for createAudioTranscription operation in BlocksApi.
 * @export
 * @interface BlocksApiCreateAudioTranscriptionRequest
 */
export interface BlocksApiCreateAudioTranscriptionRequest {
    /**
     *
     * @type {string}
     * @memberof BlocksApiCreateAudioTranscription
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {CreateAudioTranscriptionBodyParams}
     * @memberof BlocksApiCreateAudioTranscription
     */
    readonly createAudioTranscriptionBodyParams: CreateAudioTranscriptionBodyParams;
}
/**
 * Request parameters for extractEntity operation in BlocksApi.
 * @export
 * @interface BlocksApiExtractEntityRequest
 */
export interface BlocksApiExtractEntityRequest {
    /**
     *
     * @type {string}
     * @memberof BlocksApiExtractEntity
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {ExtractEntityBodyParams}
     * @memberof BlocksApiExtractEntity
     */
    readonly extractEntityBodyParams: ExtractEntityBodyParams;
}
/**
 * Request parameters for extractPdf operation in BlocksApi.
 * @export
 * @interface BlocksApiExtractPdfRequest
 */
export interface BlocksApiExtractPdfRequest {
    /**
     *
     * @type {string}
     * @memberof BlocksApiExtractPdf
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {File}
     * @memberof BlocksApiExtractPdf
     */
    readonly file: File;
}
/**
 * Request parameters for generateAnswer operation in BlocksApi.
 * @export
 * @interface BlocksApiGenerateAnswerRequest
 */
export interface BlocksApiGenerateAnswerRequest {
    /**
     *
     * @type {string}
     * @memberof BlocksApiGenerateAnswer
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {GenerateAnswerBodyParams}
     * @memberof BlocksApiGenerateAnswer
     */
    readonly generateAnswerBodyParams: GenerateAnswerBodyParams;
}
/**
 * Request parameters for getAudioTranscription operation in BlocksApi.
 * @export
 * @interface BlocksApiGetAudioTranscriptionRequest
 */
export interface BlocksApiGetAudioTranscriptionRequest {
    /**
     *
     * @type {string}
     * @memberof BlocksApiGetAudioTranscription
     */
    readonly transcriptionId: string;
    /**
     *
     * @type {string}
     * @memberof BlocksApiGetAudioTranscription
     */
    readonly xGradientWorkspaceId: string;
}
/**
 * Request parameters for personalizeDocument operation in BlocksApi.
 * @export
 * @interface BlocksApiPersonalizeDocumentRequest
 */
export interface BlocksApiPersonalizeDocumentRequest {
    /**
     *
     * @type {string}
     * @memberof BlocksApiPersonalizeDocument
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {PersonalizeDocumentBodyParams}
     * @memberof BlocksApiPersonalizeDocument
     */
    readonly personalizeDocumentBodyParams: PersonalizeDocumentBodyParams;
}
/**
 * Request parameters for summarizeDocument operation in BlocksApi.
 * @export
 * @interface BlocksApiSummarizeDocumentRequest
 */
export interface BlocksApiSummarizeDocumentRequest {
    /**
     *
     * @type {string}
     * @memberof BlocksApiSummarizeDocument
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {SummarizeDocumentBodyParams}
     * @memberof BlocksApiSummarizeDocument
     */
    readonly summarizeDocumentBodyParams: SummarizeDocumentBodyParams;
}
/**
 * BlocksApi - object-oriented interface
 * @export
 * @class BlocksApi
 * @extends {BaseAPI}
 */
export declare class BlocksApi extends BaseAPI {
    /**
     * Analyzes text to determine the emotional tone of the message.
     * @summary Sentiment analysis
     * @param {BlocksApiAnalyzeSentimentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApi
     */
    analyzeSentiment(requestParameters: BlocksApiAnalyzeSentimentRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AnalyzeSentimentSuccess>>;
    /**
     * Creates an audio transcription job.
     * @summary Create audio transcription
     * @param {BlocksApiCreateAudioTranscriptionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApi
     */
    createAudioTranscription(requestParameters: BlocksApiCreateAudioTranscriptionRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateAudioTranscriptionSuccess>>;
    /**
     * Extracts an entity from the document with the specified fields and types.
     * @summary Entity extraction
     * @param {BlocksApiExtractEntityRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApi
     */
    extractEntity(requestParameters: BlocksApiExtractEntityRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ExtractEntitySuccess>>;
    /**
     * Extracts content from the PDF.
     * @summary PDF extraction
     * @param {BlocksApiExtractPdfRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApi
     */
    extractPdf(requestParameters: BlocksApiExtractPdfRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ExtractPdfSuccess>>;
    /**
     * Answers questions using the provided context.
     * @summary Document question & answer
     * @param {BlocksApiGenerateAnswerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApi
     */
    generateAnswer(requestParameters: BlocksApiGenerateAnswerRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GenerateAnswerSuccess>>;
    /**
     * Gets the result of the audio transcription job.
     * @summary Get audio transcription
     * @param {BlocksApiGetAudioTranscriptionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApi
     */
    getAudioTranscription(requestParameters: BlocksApiGetAudioTranscriptionRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetAudioTranscriptionSuccess>>;
    /**
     * Personalizes the document in a tone and style specific to the described target audience.
     * @summary Document personalization
     * @param {BlocksApiPersonalizeDocumentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApi
     */
    personalizeDocument(requestParameters: BlocksApiPersonalizeDocumentRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PersonalizeDocumentSuccess>>;
    /**
     * Generates a summary of the document using the provided guidance.
     * @summary Document summary
     * @param {BlocksApiSummarizeDocumentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApi
     */
    summarizeDocument(requestParameters: BlocksApiSummarizeDocumentRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SummarizeDocumentSuccess>>;
}
/**
 * EmbeddingsApi - axios parameter creator
 * @export
 */
export declare const EmbeddingsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Generates normalized embeddings with the given embeddings model.
     * @summary Generate embeddings
     * @param {GenerateEmbeddingSlugEnum} slug
     * @param {string} xGradientWorkspaceId
     * @param {GenerateEmbeddingBodyParams} generateEmbeddingBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateEmbedding: (slug: GenerateEmbeddingSlugEnum, xGradientWorkspaceId: string, generateEmbeddingBodyParams: GenerateEmbeddingBodyParams, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Lists the currently available embeddings models and provides basic information, such as the slug.
     * @summary List available embeddings models
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listEmbeddings: (xGradientWorkspaceId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * EmbeddingsApi - functional programming interface
 * @export
 */
export declare const EmbeddingsApiFp: (configuration?: Configuration) => {
    /**
     * Generates normalized embeddings with the given embeddings model.
     * @summary Generate embeddings
     * @param {GenerateEmbeddingSlugEnum} slug
     * @param {string} xGradientWorkspaceId
     * @param {GenerateEmbeddingBodyParams} generateEmbeddingBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateEmbedding(slug: GenerateEmbeddingSlugEnum, xGradientWorkspaceId: string, generateEmbeddingBodyParams: GenerateEmbeddingBodyParams, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GenerateEmbeddingSuccess>>;
    /**
     * Lists the currently available embeddings models and provides basic information, such as the slug.
     * @summary List available embeddings models
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listEmbeddings(xGradientWorkspaceId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListEmbeddingsSuccess>>;
};
/**
 * EmbeddingsApi - factory interface
 * @export
 */
export declare const EmbeddingsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Generates normalized embeddings with the given embeddings model.
     * @summary Generate embeddings
     * @param {EmbeddingsApiGenerateEmbeddingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateEmbedding(requestParameters: EmbeddingsApiGenerateEmbeddingRequest, options?: AxiosRequestConfig): AxiosPromise<GenerateEmbeddingSuccess>;
    /**
     * Lists the currently available embeddings models and provides basic information, such as the slug.
     * @summary List available embeddings models
     * @param {EmbeddingsApiListEmbeddingsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listEmbeddings(requestParameters: EmbeddingsApiListEmbeddingsRequest, options?: AxiosRequestConfig): AxiosPromise<ListEmbeddingsSuccess>;
};
/**
 * Request parameters for generateEmbedding operation in EmbeddingsApi.
 * @export
 * @interface EmbeddingsApiGenerateEmbeddingRequest
 */
export interface EmbeddingsApiGenerateEmbeddingRequest {
    /**
     *
     * @type {'bge-large'}
     * @memberof EmbeddingsApiGenerateEmbedding
     */
    readonly slug: GenerateEmbeddingSlugEnum;
    /**
     *
     * @type {string}
     * @memberof EmbeddingsApiGenerateEmbedding
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {GenerateEmbeddingBodyParams}
     * @memberof EmbeddingsApiGenerateEmbedding
     */
    readonly generateEmbeddingBodyParams: GenerateEmbeddingBodyParams;
}
/**
 * Request parameters for listEmbeddings operation in EmbeddingsApi.
 * @export
 * @interface EmbeddingsApiListEmbeddingsRequest
 */
export interface EmbeddingsApiListEmbeddingsRequest {
    /**
     *
     * @type {string}
     * @memberof EmbeddingsApiListEmbeddings
     */
    readonly xGradientWorkspaceId: string;
}
/**
 * EmbeddingsApi - object-oriented interface
 * @export
 * @class EmbeddingsApi
 * @extends {BaseAPI}
 */
export declare class EmbeddingsApi extends BaseAPI {
    /**
     * Generates normalized embeddings with the given embeddings model.
     * @summary Generate embeddings
     * @param {EmbeddingsApiGenerateEmbeddingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmbeddingsApi
     */
    generateEmbedding(requestParameters: EmbeddingsApiGenerateEmbeddingRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GenerateEmbeddingSuccess>>;
    /**
     * Lists the currently available embeddings models and provides basic information, such as the slug.
     * @summary List available embeddings models
     * @param {EmbeddingsApiListEmbeddingsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmbeddingsApi
     */
    listEmbeddings(requestParameters: EmbeddingsApiListEmbeddingsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListEmbeddingsSuccess>>;
}
/**
 * @export
 */
export declare const GenerateEmbeddingSlugEnum: {
    readonly BgeLarge: "bge-large";
};
export type GenerateEmbeddingSlugEnum = typeof GenerateEmbeddingSlugEnum[keyof typeof GenerateEmbeddingSlugEnum];
/**
 * FilesApi - axios parameter creator
 * @export
 */
export declare const FilesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Stores uploaded file.
     * @summary File upload
     * @param {UploadFileTypeEnum} type
     * @param {string} xGradientWorkspaceId
     * @param {File} file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadFile: (type: UploadFileTypeEnum, xGradientWorkspaceId: string, file: File, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FilesApi - functional programming interface
 * @export
 */
export declare const FilesApiFp: (configuration?: Configuration) => {
    /**
     * Stores uploaded file.
     * @summary File upload
     * @param {UploadFileTypeEnum} type
     * @param {string} xGradientWorkspaceId
     * @param {File} file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadFile(type: UploadFileTypeEnum, xGradientWorkspaceId: string, file: File, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UploadFileSuccess>>;
};
/**
 * FilesApi - factory interface
 * @export
 */
export declare const FilesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Stores uploaded file.
     * @summary File upload
     * @param {FilesApiUploadFileRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadFile(requestParameters: FilesApiUploadFileRequest, options?: AxiosRequestConfig): AxiosPromise<UploadFileSuccess>;
};
/**
 * Request parameters for uploadFile operation in FilesApi.
 * @export
 * @interface FilesApiUploadFileRequest
 */
export interface FilesApiUploadFileRequest {
    /**
     *
     * @type {'audioFile' | 'ragUserFile'}
     * @memberof FilesApiUploadFile
     */
    readonly type: UploadFileTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FilesApiUploadFile
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {File}
     * @memberof FilesApiUploadFile
     */
    readonly file: File;
}
/**
 * FilesApi - object-oriented interface
 * @export
 * @class FilesApi
 * @extends {BaseAPI}
 */
export declare class FilesApi extends BaseAPI {
    /**
     * Stores uploaded file.
     * @summary File upload
     * @param {FilesApiUploadFileRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FilesApi
     */
    uploadFile(requestParameters: FilesApiUploadFileRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UploadFileSuccess>>;
}
/**
 * @export
 */
export declare const UploadFileTypeEnum: {
    readonly AudioFile: "audioFile";
    readonly RagUserFile: "ragUserFile";
};
export type UploadFileTypeEnum = typeof UploadFileTypeEnum[keyof typeof UploadFileTypeEnum];
/**
 * ModelsApi - axios parameter creator
 * @export
 */
export declare const ModelsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Completes your fine-tuned model with the specified prompt string. The model will generate a completion.
     * @summary Complete model
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {CompleteModelBodyParams} completeModelBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    completeModel: (id: string, xGradientWorkspaceId: string, completeModelBodyParams: CompleteModelBodyParams, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Creates a new instance of a model based on a specified model from the existing list.
     * @summary Create model
     * @param {string} xGradientWorkspaceId
     * @param {CreateModelBodyParams} createModelBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createModel: (xGradientWorkspaceId: string, createModelBodyParams: CreateModelBodyParams, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Deletes the fine-tuned model.
     * @summary Delete model
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteModel: (id: string, xGradientWorkspaceId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fine-tunes the specified model with your data samples.
     * @summary Fine-tune model
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {FineTuneModelBodyParams} fineTuneModelBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fineTuneModel: (id: string, xGradientWorkspaceId: string, fineTuneModelBodyParams: FineTuneModelBodyParams, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Describes the specified model, including the model ID, name, and base model ID.
     * @summary Describe model
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getModel: (id: string, xGradientWorkspaceId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Lists the currently available models in the selected workspace and provides basic information, such as the model name, ID and whether it is a base or fine-tuned model.
     * @summary List available models
     * @param {string} xGradientWorkspaceId
     * @param {ListModelsCapabilityEnum} [capability]
     * @param {boolean | null} [onlyBase]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModels: (xGradientWorkspaceId: string, capability?: ListModelsCapabilityEnum, onlyBase?: boolean | null, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ModelsApi - functional programming interface
 * @export
 */
export declare const ModelsApiFp: (configuration?: Configuration) => {
    /**
     * Completes your fine-tuned model with the specified prompt string. The model will generate a completion.
     * @summary Complete model
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {CompleteModelBodyParams} completeModelBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    completeModel(id: string, xGradientWorkspaceId: string, completeModelBodyParams: CompleteModelBodyParams, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CompleteModelSuccess>>;
    /**
     * Creates a new instance of a model based on a specified model from the existing list.
     * @summary Create model
     * @param {string} xGradientWorkspaceId
     * @param {CreateModelBodyParams} createModelBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createModel(xGradientWorkspaceId: string, createModelBodyParams: CreateModelBodyParams, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateModelSuccess>>;
    /**
     * Deletes the fine-tuned model.
     * @summary Delete model
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteModel(id: string, xGradientWorkspaceId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     * Fine-tunes the specified model with your data samples.
     * @summary Fine-tune model
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {FineTuneModelBodyParams} fineTuneModelBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fineTuneModel(id: string, xGradientWorkspaceId: string, fineTuneModelBodyParams: FineTuneModelBodyParams, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FineTuneModelSuccess>>;
    /**
     * Describes the specified model, including the model ID, name, and base model ID.
     * @summary Describe model
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getModel(id: string, xGradientWorkspaceId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetModelSuccess>>;
    /**
     * Lists the currently available models in the selected workspace and provides basic information, such as the model name, ID and whether it is a base or fine-tuned model.
     * @summary List available models
     * @param {string} xGradientWorkspaceId
     * @param {ListModelsCapabilityEnum} [capability]
     * @param {boolean | null} [onlyBase]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModels(xGradientWorkspaceId: string, capability?: ListModelsCapabilityEnum, onlyBase?: boolean | null, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListModelsSuccess>>;
};
/**
 * ModelsApi - factory interface
 * @export
 */
export declare const ModelsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Completes your fine-tuned model with the specified prompt string. The model will generate a completion.
     * @summary Complete model
     * @param {ModelsApiCompleteModelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    completeModel(requestParameters: ModelsApiCompleteModelRequest, options?: AxiosRequestConfig): AxiosPromise<CompleteModelSuccess>;
    /**
     * Creates a new instance of a model based on a specified model from the existing list.
     * @summary Create model
     * @param {ModelsApiCreateModelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createModel(requestParameters: ModelsApiCreateModelRequest, options?: AxiosRequestConfig): AxiosPromise<CreateModelSuccess>;
    /**
     * Deletes the fine-tuned model.
     * @summary Delete model
     * @param {ModelsApiDeleteModelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteModel(requestParameters: ModelsApiDeleteModelRequest, options?: AxiosRequestConfig): AxiosPromise<object>;
    /**
     * Fine-tunes the specified model with your data samples.
     * @summary Fine-tune model
     * @param {ModelsApiFineTuneModelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fineTuneModel(requestParameters: ModelsApiFineTuneModelRequest, options?: AxiosRequestConfig): AxiosPromise<FineTuneModelSuccess>;
    /**
     * Describes the specified model, including the model ID, name, and base model ID.
     * @summary Describe model
     * @param {ModelsApiGetModelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getModel(requestParameters: ModelsApiGetModelRequest, options?: AxiosRequestConfig): AxiosPromise<GetModelSuccess>;
    /**
     * Lists the currently available models in the selected workspace and provides basic information, such as the model name, ID and whether it is a base or fine-tuned model.
     * @summary List available models
     * @param {ModelsApiListModelsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModels(requestParameters: ModelsApiListModelsRequest, options?: AxiosRequestConfig): AxiosPromise<ListModelsSuccess>;
};
/**
 * Request parameters for completeModel operation in ModelsApi.
 * @export
 * @interface ModelsApiCompleteModelRequest
 */
export interface ModelsApiCompleteModelRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiCompleteModel
     */
    readonly id: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiCompleteModel
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {CompleteModelBodyParams}
     * @memberof ModelsApiCompleteModel
     */
    readonly completeModelBodyParams: CompleteModelBodyParams;
}
/**
 * Request parameters for createModel operation in ModelsApi.
 * @export
 * @interface ModelsApiCreateModelRequest
 */
export interface ModelsApiCreateModelRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiCreateModel
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {CreateModelBodyParams}
     * @memberof ModelsApiCreateModel
     */
    readonly createModelBodyParams: CreateModelBodyParams;
}
/**
 * Request parameters for deleteModel operation in ModelsApi.
 * @export
 * @interface ModelsApiDeleteModelRequest
 */
export interface ModelsApiDeleteModelRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiDeleteModel
     */
    readonly id: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiDeleteModel
     */
    readonly xGradientWorkspaceId: string;
}
/**
 * Request parameters for fineTuneModel operation in ModelsApi.
 * @export
 * @interface ModelsApiFineTuneModelRequest
 */
export interface ModelsApiFineTuneModelRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiFineTuneModel
     */
    readonly id: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiFineTuneModel
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {FineTuneModelBodyParams}
     * @memberof ModelsApiFineTuneModel
     */
    readonly fineTuneModelBodyParams: FineTuneModelBodyParams;
}
/**
 * Request parameters for getModel operation in ModelsApi.
 * @export
 * @interface ModelsApiGetModelRequest
 */
export interface ModelsApiGetModelRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiGetModel
     */
    readonly id: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiGetModel
     */
    readonly xGradientWorkspaceId: string;
}
/**
 * Request parameters for listModels operation in ModelsApi.
 * @export
 * @interface ModelsApiListModelsRequest
 */
export interface ModelsApiListModelsRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiListModels
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {'complete' | 'fineTune' | 'any'}
     * @memberof ModelsApiListModels
     */
    readonly capability?: ListModelsCapabilityEnum;
    /**
     *
     * @type {boolean}
     * @memberof ModelsApiListModels
     */
    readonly onlyBase?: boolean | null;
}
/**
 * ModelsApi - object-oriented interface
 * @export
 * @class ModelsApi
 * @extends {BaseAPI}
 */
export declare class ModelsApi extends BaseAPI {
    /**
     * Completes your fine-tuned model with the specified prompt string. The model will generate a completion.
     * @summary Complete model
     * @param {ModelsApiCompleteModelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    completeModel(requestParameters: ModelsApiCompleteModelRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CompleteModelSuccess>>;
    /**
     * Creates a new instance of a model based on a specified model from the existing list.
     * @summary Create model
     * @param {ModelsApiCreateModelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    createModel(requestParameters: ModelsApiCreateModelRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateModelSuccess>>;
    /**
     * Deletes the fine-tuned model.
     * @summary Delete model
     * @param {ModelsApiDeleteModelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    deleteModel(requestParameters: ModelsApiDeleteModelRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     * Fine-tunes the specified model with your data samples.
     * @summary Fine-tune model
     * @param {ModelsApiFineTuneModelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    fineTuneModel(requestParameters: ModelsApiFineTuneModelRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FineTuneModelSuccess>>;
    /**
     * Describes the specified model, including the model ID, name, and base model ID.
     * @summary Describe model
     * @param {ModelsApiGetModelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    getModel(requestParameters: ModelsApiGetModelRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetModelSuccess>>;
    /**
     * Lists the currently available models in the selected workspace and provides basic information, such as the model name, ID and whether it is a base or fine-tuned model.
     * @summary List available models
     * @param {ModelsApiListModelsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    listModels(requestParameters: ModelsApiListModelsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListModelsSuccess>>;
}
/**
 * @export
 */
export declare const ListModelsCapabilityEnum: {
    readonly Complete: "complete";
    readonly FineTune: "fineTune";
    readonly Any: "any";
};
export type ListModelsCapabilityEnum = typeof ListModelsCapabilityEnum[keyof typeof ListModelsCapabilityEnum];
/**
 * RAGApi - axios parameter creator
 * @export
 */
export declare const RAGApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Adds files to the RAG collection.
     * @summary Add files to RAG collection
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {AddFilesToRagCollectionBodyParams} addFilesToRagCollectionBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFilesToRagCollection: (id: string, xGradientWorkspaceId: string, addFilesToRagCollectionBodyParams: AddFilesToRagCollectionBodyParams, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Creates a new collection of RAG documents.
     * @summary Create RAG collection
     * @param {string} xGradientWorkspaceId
     * @param {CreateRagCollectionBodyParams} createRagCollectionBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createRagCollection: (xGradientWorkspaceId: string, createRagCollectionBodyParams: CreateRagCollectionBodyParams, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Deletes the RAG collection.
     * @summary Delete RAG collection
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteRagCollection: (id: string, xGradientWorkspaceId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Gets the RAG collection details.
     * @summary Get RAG collection
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRagCollection: (id: string, xGradientWorkspaceId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Lists all RAG collections associated with your workspace.
     * @summary List RAG collections
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listRagCollections: (xGradientWorkspaceId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * RAGApi - functional programming interface
 * @export
 */
export declare const RAGApiFp: (configuration?: Configuration) => {
    /**
     * Adds files to the RAG collection.
     * @summary Add files to RAG collection
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {AddFilesToRagCollectionBodyParams} addFilesToRagCollectionBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFilesToRagCollection(id: string, xGradientWorkspaceId: string, addFilesToRagCollectionBodyParams: AddFilesToRagCollectionBodyParams, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     * Creates a new collection of RAG documents.
     * @summary Create RAG collection
     * @param {string} xGradientWorkspaceId
     * @param {CreateRagCollectionBodyParams} createRagCollectionBodyParams
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createRagCollection(xGradientWorkspaceId: string, createRagCollectionBodyParams: CreateRagCollectionBodyParams, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateRagCollectionSuccess>>;
    /**
     * Deletes the RAG collection.
     * @summary Delete RAG collection
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteRagCollection(id: string, xGradientWorkspaceId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     * Gets the RAG collection details.
     * @summary Get RAG collection
     * @param {string} id
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRagCollection(id: string, xGradientWorkspaceId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetRagCollectionSuccess>>;
    /**
     * Lists all RAG collections associated with your workspace.
     * @summary List RAG collections
     * @param {string} xGradientWorkspaceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listRagCollections(xGradientWorkspaceId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListRagCollectionsSuccess>>;
};
/**
 * RAGApi - factory interface
 * @export
 */
export declare const RAGApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Adds files to the RAG collection.
     * @summary Add files to RAG collection
     * @param {RAGApiAddFilesToRagCollectionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFilesToRagCollection(requestParameters: RAGApiAddFilesToRagCollectionRequest, options?: AxiosRequestConfig): AxiosPromise<object>;
    /**
     * Creates a new collection of RAG documents.
     * @summary Create RAG collection
     * @param {RAGApiCreateRagCollectionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createRagCollection(requestParameters: RAGApiCreateRagCollectionRequest, options?: AxiosRequestConfig): AxiosPromise<CreateRagCollectionSuccess>;
    /**
     * Deletes the RAG collection.
     * @summary Delete RAG collection
     * @param {RAGApiDeleteRagCollectionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteRagCollection(requestParameters: RAGApiDeleteRagCollectionRequest, options?: AxiosRequestConfig): AxiosPromise<object>;
    /**
     * Gets the RAG collection details.
     * @summary Get RAG collection
     * @param {RAGApiGetRagCollectionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRagCollection(requestParameters: RAGApiGetRagCollectionRequest, options?: AxiosRequestConfig): AxiosPromise<GetRagCollectionSuccess>;
    /**
     * Lists all RAG collections associated with your workspace.
     * @summary List RAG collections
     * @param {RAGApiListRagCollectionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listRagCollections(requestParameters: RAGApiListRagCollectionsRequest, options?: AxiosRequestConfig): AxiosPromise<ListRagCollectionsSuccess>;
};
/**
 * Request parameters for addFilesToRagCollection operation in RAGApi.
 * @export
 * @interface RAGApiAddFilesToRagCollectionRequest
 */
export interface RAGApiAddFilesToRagCollectionRequest {
    /**
     *
     * @type {string}
     * @memberof RAGApiAddFilesToRagCollection
     */
    readonly id: string;
    /**
     *
     * @type {string}
     * @memberof RAGApiAddFilesToRagCollection
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {AddFilesToRagCollectionBodyParams}
     * @memberof RAGApiAddFilesToRagCollection
     */
    readonly addFilesToRagCollectionBodyParams: AddFilesToRagCollectionBodyParams;
}
/**
 * Request parameters for createRagCollection operation in RAGApi.
 * @export
 * @interface RAGApiCreateRagCollectionRequest
 */
export interface RAGApiCreateRagCollectionRequest {
    /**
     *
     * @type {string}
     * @memberof RAGApiCreateRagCollection
     */
    readonly xGradientWorkspaceId: string;
    /**
     *
     * @type {CreateRagCollectionBodyParams}
     * @memberof RAGApiCreateRagCollection
     */
    readonly createRagCollectionBodyParams: CreateRagCollectionBodyParams;
}
/**
 * Request parameters for deleteRagCollection operation in RAGApi.
 * @export
 * @interface RAGApiDeleteRagCollectionRequest
 */
export interface RAGApiDeleteRagCollectionRequest {
    /**
     *
     * @type {string}
     * @memberof RAGApiDeleteRagCollection
     */
    readonly id: string;
    /**
     *
     * @type {string}
     * @memberof RAGApiDeleteRagCollection
     */
    readonly xGradientWorkspaceId: string;
}
/**
 * Request parameters for getRagCollection operation in RAGApi.
 * @export
 * @interface RAGApiGetRagCollectionRequest
 */
export interface RAGApiGetRagCollectionRequest {
    /**
     *
     * @type {string}
     * @memberof RAGApiGetRagCollection
     */
    readonly id: string;
    /**
     *
     * @type {string}
     * @memberof RAGApiGetRagCollection
     */
    readonly xGradientWorkspaceId: string;
}
/**
 * Request parameters for listRagCollections operation in RAGApi.
 * @export
 * @interface RAGApiListRagCollectionsRequest
 */
export interface RAGApiListRagCollectionsRequest {
    /**
     *
     * @type {string}
     * @memberof RAGApiListRagCollections
     */
    readonly xGradientWorkspaceId: string;
}
/**
 * RAGApi - object-oriented interface
 * @export
 * @class RAGApi
 * @extends {BaseAPI}
 */
export declare class RAGApi extends BaseAPI {
    /**
     * Adds files to the RAG collection.
     * @summary Add files to RAG collection
     * @param {RAGApiAddFilesToRagCollectionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RAGApi
     */
    addFilesToRagCollection(requestParameters: RAGApiAddFilesToRagCollectionRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     * Creates a new collection of RAG documents.
     * @summary Create RAG collection
     * @param {RAGApiCreateRagCollectionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RAGApi
     */
    createRagCollection(requestParameters: RAGApiCreateRagCollectionRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateRagCollectionSuccess>>;
    /**
     * Deletes the RAG collection.
     * @summary Delete RAG collection
     * @param {RAGApiDeleteRagCollectionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RAGApi
     */
    deleteRagCollection(requestParameters: RAGApiDeleteRagCollectionRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     * Gets the RAG collection details.
     * @summary Get RAG collection
     * @param {RAGApiGetRagCollectionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RAGApi
     */
    getRagCollection(requestParameters: RAGApiGetRagCollectionRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRagCollectionSuccess>>;
    /**
     * Lists all RAG collections associated with your workspace.
     * @summary List RAG collections
     * @param {RAGApiListRagCollectionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RAGApi
     */
    listRagCollections(requestParameters: RAGApiListRagCollectionsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListRagCollectionsSuccess>>;
}
//# sourceMappingURL=api.d.ts.map